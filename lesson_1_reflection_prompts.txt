How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It shows the difference between old and new versions.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    The new version can be compared with the older versions.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros- It is more suitable for coding. If you commit automatically after a fixed time or a fixed no of lines, the code may not even compile.
    Cons- User error possible.
    		No hard and dry time associated.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is designed to support projects which involve large codes and where more than one files are related to each other. 

How can you use the commands git log and git diff to view the history of files?

    We can type git log to get a log of all the previous commits made which shows the commit ids on the top of each commit. Hence we can
    compare any two versions we want using git diff.	

How might using version control make you more confident to make changes that
could break something?

   	A programmer wouldn't be afraid to make innovations in his/her code as we can always revert back to the older version of the code.

Now that you have your workspace set up, what do you want to try using Git for?

    I can try using Git for my android development
